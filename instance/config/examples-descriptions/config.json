{
  // The below is fake example data to demonstrate what a proper setup would look like using your own data.
  // The example shows have two assets. One called "My Great Asset: One" and "My Great Asset: Two"
  // "My Great Asset: One" is using the shortcode of "MGA1"
  // "My Great Asset: Two" is using the shortcode of "MGA2"


  // -------------- Discord Assistant Configuration --------------------------------------------------------------------
  // Discord Authentication Token from https://discordapp.com/developers/applications/
  token: "NDk123423423f2fg2g2g24g34g34g34gBbze3u7M",
  // Enable additional features? (Yes or No) More will be added as they are developed. For additional options and setup,
  // please see the specific config files for each feature
  features:{
   // Oauth2 is  used to authenticate the connection with your WordPress site.
   // Definitely see the documentation for proper setup.
    wordpress:"Yes",
    connection: "Oauth2"
  },
  miscsettings:{
    // Required if you are going to be communicating with your own website.
    webaddress:"http://instance.id",

    // If require email is set to yes it will ask the user for their email before they are able to verify their invoice
    // This is necessary to ensure the exists on your website site if permissions are going to be automatically applied.
    requireemail: "Yes",
  },
  // -------------- Your Discord Server Details ------------------------------------------------------------------------
  // Command prefix is the character string you will type to your bot in order to signify the beginning of
  // a command statement in which the bot will listen / respond ex. If your command prefix is '!cmd" your statement
  // to the bot would appear as this '!cmdhellobot'
  commandprefix: "!cmd",
  // Please see documentation on how to obtain the following needed role ID's from your Discord Server
  discordIds:{
    // Guild is the identification number for the server itself
    // Note that the actual Id numbers value is an integer value so it must not be in quotes but is to have a comma after the number (ex: - guild: 1234567890123, )
    guild: 4623423423423423412,
    // 'botusers' is the role you will give trusted members such as other admins or moderators.
    // Note that it will give them ability to query and delete stored user information.
     // Note that the actual Id numbers value is an integer value so it must not be in quotes but is to have a comma after the number (ex: - guild: 1234567890123, )
    botusers: 49234234234234970
  },
  // Role Id number int values are required when assigning roles to users.
  // Name the key value the same as you name the
  // apiKey / package id as that is what ties the verified package to the appropriate role / channels to give access
  roles:{
  // Please see the "roles" entry of the documentation under "Configuration: config.json" for more detailed information.
  // 'Verified" is the generic verified ID. It can be used if you only have 1 asset or as a general "verified" role
  // to allow access to multiple channels not specific to a single asset (ex. general support, news, update info, etc)
  // Note that the actual Id numbers value is an integer value so it must not be in quotes but is to have a comma after the number (ex: - guild: 1234567890123, )
  // (shortcode: RoleIDNumber)
    Verified: 461231231235459600,
    MGA1: 495401234212336242,
    MGA2: 495402123232268035,
  },

  // !!!! IMPORTANT -  Date compare is only used if you depreciated one asset and came out with another in it's place of the same name.
  // ex. MGA1 vs MGA2 but both are actually named 'My Great Asset' on the Asset Store
  datecompare: "No",
  // Compare date is the date in which your new asset took over from your old one to determine which one is being verified against
  comparedate: "2018-08-31",  // Format is Year-Month-day
  // If you are comparing two assets to determine which to verify put the earlier released asset's shortcode as compareasset1
  // If the customers purchase date is more recent than your compare date, they are verified for the newer asset (compareasset2)
  compareasset1: "MGA1", // Original asset
  compareasset2: "MGA2",  // Newer asset

  /* Here is where you will put the shortcode of your asset along with the publisher API key(s) and in the second section
     you will have your shortcode along with the string name of your asset exactly as it is in the asset store
     For the first section the shortcode will be the key: the apikey will be the value, same for the second section, but with
     the string name of your asset as the value
  */
    apiKey:{
      MGA1: "Ssev23r5ff2efdDFgRGsdfefef23",
      MGA2: "gAF3sdr4545gGgGdrg4weGgsdrv3",
  },
    package:{
      MGA1: "My Great Asset: One",
      MGA2: "My Great Asset: Two",
  }
}